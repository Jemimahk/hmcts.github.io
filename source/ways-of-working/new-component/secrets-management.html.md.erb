---
title: Secrets Management
last_reviewed_on: 2020-03-11
review_in: 6 months
weight: 5
---

# <%= current_page.data.title %>

We use [Azure Keyvaults](https://docs.microsoft.com/en-us/azure/key-vault/) for managing secrets.

- Use [Terraform module](https://github.com/hmcts/cnp-module-key-vault) to create key vaults.
- Naming convention for keyvaults is `{product}-{component}-{env}`
- Teams can be setup to have [access for managing secrets](https://github.com/hmcts/cnp-module-key-vault#writing-secrets-to-key-vaults) 
- Use shared vaults (`{product}-{env}`) created through shared infrastructure repository if there are more secrets shared across multiple components in your product. 
- If any secrets are compromised, Secops need to be reported and necessary steps need to be taken to rotate them. 

## Setup application access.

1. Applications running in Kubernetes use (managed identity)[https://github.com/Azure/aad-pod-identity] to access secrets from keyvaults.
2. Use [ops-resource-groups](https://github.com/hmcts/ops-resource-groups#getting-started) to create managed identities for your product. 
3. Client and Object Id can be retrieved from terraform output logs of Azure devops pipeline run when u merge your PR.
4. Add `AzureIdentity` k8s resources to [Flux](https://github.com/hmcts/cnp-flux-config/blob/master/bin/base-ns-id-gen.sh).
5. Add Managed Identity Object Id to keyvault through [terraform](https://github.com/hmcts/cnp-module-key-vault/blob/master/README.md#managed_identity_object_id).

    `Note: You need to run your infrastructure pipeline on each environment for this to be added`
6. All base helm charts support [configuring keyvaults](https://github.com/hmcts/chart-java#adding-azure-key-vault-secrets) to mount secrets on container file system using [kubernetes-keyvault-flexvol](https://github.com/Azure/kubernetes-keyvault-flexvol). 
7. Applications should use [properties-volume-nodejs](https://github.com/hmcts/properties-volume-nodejs) or [properties-volume-spring-boot-starter](https://github.com/hmcts/properties-volume-spring-boot-starter) to set secrets from file systems as environment variables. 
